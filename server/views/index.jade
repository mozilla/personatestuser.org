#verified-email-template(style='display: none')
  ul.info
    li
      span.key Username
      span.value
        tt.selectable {{ email }}
    li
      span.key Password
      span.value
        tt.selectable {{ password }}
    li
      span.key Expires
      span.value {{ expiresDisplay }}

#unverified-email-template(style='display: none')
  ul.info
    li
      span.key Username
      span.value
        tt.selectable {{ email }}
    li
      span.key Password
      span.value
        tt.selectable {{ password }}
    li
      span.key Token
      span.value
        tt.selectable {{ token }}
    li
      span.key Expires
      span.value {{ expiresDisplay }}



div
  #status
    .message Hello!


div

  div This is a service for creating temporary user accounts and assertions for 
    | testing your 
    a(href='https://persona.org') Persona
    | -powered login flows.

  h3 HTTP API

  dl
    dt Verified Email
    dd
      code GET /email
        span.option /:env
      p Get a new, verified email and password.  
        | You will be able to use this account right away. 
        a(class='function', href='/email', id='submit-email-verified') Try it!

      div
        .info
          #create-verified-email-info

    dt Unverified Email
    dd
      code GET /unverified_email
        span.option /:env
      p Get an email, password, and verification token. 
        | You will need to complete the verification process for this account. 
        a(class='function', href='/unverified_email', id='submit-email-unverified') Try it!

        .info
          #create-unverified-email-info


    dt Email and Assertion
    dd
      code GET /email_with_assertion/
        span.param :audience
        span.option /:env
      p Get a new email, password, and assertion for the given audience.

    dt Assertion
    dd
      code GET /assertion/
        span.param :audience
        span.param :email
        span.param :password
      p Get an assertion, using a valid email and password, for the given audience.


script
  head.ready(function() {
    var model = new Application;
    var view = new ApplicationView({model:model});
  });
